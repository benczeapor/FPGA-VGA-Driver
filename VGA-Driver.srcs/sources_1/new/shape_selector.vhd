library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;

entity shape_selector is
    port
    (
        addr: in std_logic_vector(11 downto 0);
        sel: in std_logic_vector(1 downto 0);
        show: out std_logic
    );
end shape_selector;

architecture Behavioral of shape_selector is
    signal pattern:  std_logic_vector(0 to 4095) := x"000000FFFE00000000000FFFFFE0000000003FFFFFF800000000FFFFFFFE00000003FFFFFFFF80000007FFFFFFFFC000000FFFFFFFFFE000003FFFFFFFFFF800007FFFFFFFFFFC0000FFFFFFFFFFFE0001FFFFFFFFFFFF0001FFFFFFFFFFFF0003FFFFFFFFFFFF8007FFC1FFFE0FFFC00FFFC1FFFE0FFFE00FFFC1FFFE0FFFE01FFFC1FFFE0FFFF01FFFC1FFFE0FFFF03FFFFFFFFFFFFFF83FFFFFFFFFFFFFF87FFFFFFFFFFFFFFC7FFFFFFFFFFFFFFC7FFFFFFFFFFFFFFC7FFFFFFFFFFFFFFCFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFF1FFFFFFFF1FFEFFE07FFFFFFC0FFE7FC01FFFFFF007FC7FE007FFFFC00FFC7FF800FFFE003FFC7FFE003FF800FFFC3FFF00000001FFF83FFFC0000007FFF81FFFE000000FFFF01FFFF800003FFFF00FFFFC00007FFFE00FFFFF0001FFFFE007FFFF8003FFFFC003FFFFFFFFFFFF8001FFFFFFFFFFFF0001FFFFFFFFFFFF0000FFFFFFFFFFFE00007FFFFFFFFFFC00003FFFFFFFFFF800000FFFFFFFFFE0000007FFFFFFFFC0000003FFFFFFFF80000000FFFFFFFE000000003FFFFFF8000000000FFFFFE00000000000FFFE0000000000000000000000";
    signal pattern2: std_logic_vector(0 to 4095) := x
begin

    process
    begin
        if(sel = "00") then -- the first shape is a square
            show <= '1';
        elsif(sel = "01") then -- the second shape is a right angle triangle
            if(unsigned(addr(11 downto 6)) >= unsigned(addr(5 downto 0))) then
                show <= '1';
            else
                show <= '0';
            end if; 
        elsif(sel = "10") then -- the third shape is an equilateral triangle
            show <= pattern2(to_integer(unsigned(addr)));
--            if(unsigned(addr(11 downto 6)) < unsigned(addr(5 downto 0)) / 2) then
--                show <= '1';
--            else
--                show <= '0';
--            end if;
        else
            show <= pattern(to_integer(unsigned(addr)));
        end if;
    end process;

end Behavioral;
